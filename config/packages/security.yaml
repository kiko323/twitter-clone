security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 4
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 4
    providers:
        chain_provider:
            chain:
                providers: [in_memory, db_provider]
        db_provider:
            entity:
                class: App\Entity\User
                property: username
        in_memory:
          memory:
            users:
              admin1:
                password: $2a$04$138Ybffm4vxOH9GoBfACDetEa4TWjlaVIiUTrEY1iDMe8PZPotxOi
                roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: chain_provider
            # activate different ways to authenticate

            #http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: login
                check_path: login
                csrf_token_generator: security.csrf.token_manager
            # https://symfony.com/doc/current/security/form_login_setup.html

            logout:
                path: /logout
                target: home
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
